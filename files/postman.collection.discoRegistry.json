{"item": [{"id": "fa3fd4a5-29c3-4d96-b7a6-29b627739638", "name": "Search for services in the registry", "request": {"name": "Search for services in the registry", "description": {}, "url": {"path": ["find", ""], "host": ["{{baseUrl}}"], "query": [{"description": "Search by the URL identifying the service in the registry.", "key": "registryURL", "value": "<uri>"}, {"description": "Search by the unique registry identifier for the service.", "key": "registryID", "value": "<string>"}, {"description": "Search by the service URL.", "key": "serviceURL", "value": "<string>"}, {"description": "Search by the non-unique, human-readable name of the service.", "key": "serviceName", "value": "<string>"}, {"description": "Search by a space-separated list of filter tag words.", "key": "tags", "value": "<string>"}, {"description": "Search by the current status of service.", "key": "status", "value": "<string>"}, {"description": "Search by the profile URL describing the particular semantics of\nthe service.", "key": "semanticProfile", "value": "<string>"}, {"description": "Search by a space-separated list of media type identifiers that may\nbe used as the `requestMediaType` or `responseMediaType` for a\nservice.", "key": "mediaType", "value": "<string>"}, {"description": "Search by the URL that may be used to check the health of the service.", "key": "healthURL", "value": "<string>"}, {"description": "Search by the maximum amount of time (in seconds) to wait before\ntiming out a response from the service's health check URL and\ntreating the service as *unhealthy*.", "key": "healthTTL", "value": "<integer>"}, {"description": "Search by the last date/time of successful health ping. Must be\nformatted according to RFC 3339.", "key": "healthLastPing", "value": "<dateTime>"}, {"description": "Search by the number of estimated clients using the service.", "key": "bindCount", "value": "<integer>"}, {"description": "Search by the URL that may be used to renew the service in the\nregistry.", "key": "renewURL", "value": "<uri>"}, {"description": "Search by the maximum amount of time (in seconds) to wait between\nrenewal pings from the service before treating the service as\n*unhealthy*.", "key": "renewTTL", "value": "<integer>"}, {"description": "Search by the last date/time of successful renewal. Must be\nformatted according to RFC 3339.", "key": "renewLastPing", "value": "<dateTime>"}], "variable": []}, "method": "GET", "auth": {"type": "noauth"}, "header": [{"key": "Accept", "value": "application/json"}]}, "response": [{"id": "08f3ce0a-80f6-4a65-8fa6-0d44257bcdf0", "name": "An array of registered services matching the search parameters.", "originalRequest": {"url": {"path": ["find", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryURL", "value": "<uri>"}, {"key": "registryID", "value": "<string>"}, {"key": "serviceURL", "value": "<string>"}, {"key": "serviceName", "value": "<string>"}, {"key": "tags", "value": "<string>"}, {"key": "status", "value": "<string>"}, {"key": "semanticProfile", "value": "<string>"}, {"key": "mediaType", "value": "<string>"}, {"key": "healthURL", "value": "<string>"}, {"key": "healthTTL", "value": "<integer>"}, {"key": "healthLastPing", "value": "<dateTime>"}, {"key": "bindCount", "value": "<integer>"}, {"key": "renewURL", "value": "<uri>"}, {"key": "renewTTL", "value": "<integer>"}, {"key": "renewLastPing", "value": "<dateTime>"}], "variable": []}, "method": "GET", "body": {}}, "status": "OK", "code": 200, "header": [{"key": "Content-Type", "value": "application/json"}], "body": "{\n \"disco\": [\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  },\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  }\n ]\n}", "cookie": [], "_postman_previewlanguage": "json"}], "event": []}, {"id": "cf9ef2f6-529c-4944-925a-6105141d1d56", "name": "Register a service in the registry", "request": {"name": "Register a service in the registry", "description": {}, "url": {"path": ["reg", ""], "host": ["{{baseUrl}}"], "query": [], "variable": []}, "header": [{"key": "Content-Type", "value": "application/json"}, {"key": "Accept", "value": "application/json"}], "method": "POST", "auth": {"type": "noauth"}, "body": {"mode": "raw", "raw": "{\n    \"serviceName\": \"<string>\",\n    \"serviceURL\": \"<uri>\",\n    \"semanticProfile\": \"<uri>\",\n    \"requestMediaType\": \"<string>\",\n    \"responseMediaType\": \"<string>\",\n    \"healthURL\": \"<uri>\",\n    \"healthTTL\": \"<integer>\",\n    \"renewURL\": \"<uri>\",\n    \"renewTTL\": \"<integer>\",\n    \"tags\": \"<string>\"\n}"}}, "response": [{"id": "812cd6c0-1d99-46f7-8d49-d5bd7446d5d1", "name": "An array of services containing the single service registered.", "originalRequest": {"url": {"path": ["reg", ""], "host": ["{{baseUrl}}"], "query": [], "variable": []}, "header": [{"key": "Content-Type", "value": "application/json"}], "method": "POST", "body": {"mode": "raw", "raw": "{\n    \"serviceName\": \"<string>\",\n    \"serviceURL\": \"<uri>\",\n    \"semanticProfile\": \"<uri>\",\n    \"requestMediaType\": \"<string>\",\n    \"responseMediaType\": \"<string>\",\n    \"healthURL\": \"<uri>\",\n    \"healthTTL\": \"<integer>\",\n    \"renewURL\": \"<uri>\",\n    \"renewTTL\": \"<integer>\",\n    \"tags\": \"<string>\"\n}"}}, "status": "OK", "code": 200, "header": [{"key": "Content-Type", "value": "application/json"}], "body": "{\n \"disco\": [\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  },\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  }\n ]\n}", "cookie": [], "_postman_previewlanguage": "json"}, {"id": "eb22d762-894a-44ad-a4ea-27f00efe0033", "name": "The requesting client does not have permission to register the\ngiven service entity.", "originalRequest": {"url": {"path": ["reg", ""], "host": ["{{baseUrl}}"], "query": [], "variable": []}, "header": [{"key": "Content-Type", "value": "application/json"}], "method": "POST", "body": {"mode": "raw", "raw": "{\n    \"serviceName\": \"<string>\",\n    \"serviceURL\": \"<uri>\",\n    \"semanticProfile\": \"<uri>\",\n    \"requestMediaType\": \"<string>\",\n    \"responseMediaType\": \"<string>\",\n    \"healthURL\": \"<uri>\",\n    \"healthTTL\": \"<integer>\",\n    \"renewURL\": \"<uri>\",\n    \"renewTTL\": \"<integer>\",\n    \"tags\": \"<string>\"\n}"}}, "status": "Forbidden", "code": 403, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}], "event": []}, {"id": "213ef0c5-438e-47fb-975b-1d889498cc98", "name": "Unregister a service in the registry", "request": {"name": "Unregister a service in the registry", "description": {}, "url": {"path": ["unreg", ""], "host": ["{{baseUrl}}"], "query": [{"description": "The ID of the service to unregister.", "key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "auth": {"type": "noauth"}, "header": [{"key": "Accept", "value": "application/json"}]}, "response": [{"id": "340758f5-5eb9-4807-b1d8-9fd72cbb5fbd", "name": "An empty array of services; the service was successfully unregistered.", "originalRequest": {"url": {"path": ["unreg", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "OK", "code": 200, "header": [{"key": "Content-Type", "value": "application/json"}], "body": "{\n \"disco\": [\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  },\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  }\n ]\n}", "cookie": [], "_postman_previewlanguage": "json"}, {"id": "a902503e-8e41-4050-895d-fd52f07beb45", "name": "The requesting client does not have permission to unregister the\ngiven service.", "originalRequest": {"url": {"path": ["unreg", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Forbidden", "code": 403, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}, {"id": "5594aba9-c39c-474b-bd95-4ffa3e52d347", "name": "The service requested could not be found.", "originalRequest": {"url": {"path": ["unreg", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Not Found", "code": 404, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}], "event": []}, {"id": "cee7ce97-c27e-48dc-82c5-552c66de1397", "name": "Renew the service record in the registry", "request": {"name": "Renew the service record in the registry", "description": {"content": "Services may use this endpoint to prove to the registry that it is still\nup and running.", "type": "text/plain"}, "url": {"path": ["renew", ""], "host": ["{{baseUrl}}"], "query": [{"description": "The ID of the service to renew.", "key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "auth": {"type": "noauth"}, "header": [{"key": "Accept", "value": "application/json"}]}, "response": [{"id": "38f19068-65c0-4aa0-8394-ac0fa9d8fbc5", "name": "An array of services containing the single service renewed.", "originalRequest": {"url": {"path": ["renew", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "OK", "code": 200, "header": [{"key": "Content-Type", "value": "application/json"}], "body": "{\n \"disco\": [\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  },\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  }\n ]\n}", "cookie": [], "_postman_previewlanguage": "json"}, {"id": "0b6f9e28-28cf-4531-80be-e9640df67b25", "name": "The requesting client does not have permission to renew the\ngiven service.", "originalRequest": {"url": {"path": ["renew", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Forbidden", "code": 403, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}, {"id": "22251e21-cf5e-47f2-98e6-6511abc187c1", "name": "The service requested could not be found.", "originalRequest": {"url": {"path": ["renew", ""], "host": ["{{baseUrl}}"], "query": [{"key": "registryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Not Found", "code": 404, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}], "event": []}, {"id": "68f05b66-40e7-4a41-9782-189537d99709", "name": "Bind one service in the registry to another service", "request": {"name": "Bind one service in the registry to another service", "description": {"content": "The bind action is used by a service to inform the registry that the\nservice intends to \"use\" that service in subsequent interactions.", "type": "text/plain"}, "url": {"path": ["bind", ""], "host": ["{{baseUrl}}"], "query": [{"description": "The ID of the service *asking* for a connection.", "key": "sourceRegistryID", "value": "<string>"}, {"description": "The ID of the service to be *used* by the *asking* service.", "key": "targetRegistryID", "value": "<string>"}], "variable": []}, "method": "POST", "auth": {"type": "noauth"}, "header": [{"key": "Accept", "value": "application/json"}]}, "response": [{"id": "94f3dd75-b200-4f0b-8e2d-d1b71f73ad5a", "name": "The `bindToken` representing the connection between the two\nservices, as well as an array containing the bound services.", "originalRequest": {"url": {"path": ["bind", ""], "host": ["{{baseUrl}}"], "query": [{"key": "sourceRegistryID", "value": "<string>"}, {"key": "targetRegistryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "OK", "code": 200, "header": [{"key": "Content-Type", "value": "application/json"}], "body": "{\n \"bindToken\": \"<string>\",\n \"disco\": [\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  },\n  {\n   \"serviceName\": \"<string>\",\n   \"serviceURL\": \"<uri>\",\n   \"registryID\": \"<string>\",\n   \"registryURL\": \"<string>\",\n   \"semanticProfile\": \"<uri>\",\n   \"requestMediaType\": \"<string>\",\n   \"responseMediaType\": \"<string>\",\n   \"healthURL\": \"<uri>\",\n   \"healthTTL\": \"<integer>\",\n   \"healthLastPing\": \"<dateTime>\",\n   \"renewURL\": \"<uri>\",\n   \"renewTTL\": \"<integer>\",\n   \"renewLastPing\": \"<dateTime>\",\n   \"tags\": \"<string>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateUpdated\": \"<dateTime>\"\n  }\n ]\n}", "cookie": [], "_postman_previewlanguage": "json"}, {"id": "b583465f-fca9-4c68-9b7f-c87d88790e53", "name": "The requesting client does not have permission to bind the services.", "originalRequest": {"url": {"path": ["bind", ""], "host": ["{{baseUrl}}"], "query": [{"key": "sourceRegistryID", "value": "<string>"}, {"key": "targetRegistryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Forbidden", "code": 403, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}, {"id": "eea3036c-8274-49fe-9909-e4ab7392c692", "name": "One of the services (or both) does not exist in the registry.", "originalRequest": {"url": {"path": ["bind", ""], "host": ["{{baseUrl}}"], "query": [{"key": "sourceRegistryID", "value": "<string>"}, {"key": "targetRegistryID", "value": "<string>"}], "variable": []}, "method": "POST", "body": {}}, "status": "Not Found", "code": 404, "header": [{"key": "Content-Type", "value": "text/plain"}], "body": "", "cookie": [], "_postman_previewlanguage": "text"}], "event": []}], "event": [], "variable": [{"id": "baseUrl", "type": "string", "value": "http://rwmbook-registry.herokuapp.com"}], "info": {"_postman_id": "6ea1de1a-16f0-4dcd-816c-95ef8c428033", "name": "DISCO Server", "version": {"raw": "v1.0.0", "major": 1, "minor": 0, "patch": 0, "prerelease": [], "build": [], "string": "1.0.0"}, "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json", "description": {"content": "", "type": "text/plain"}}}